=======
Roadmap
=======

This document is to outline the defining features of Ophelia releases. It is
not about schedules; Ophelia will be released whenever it is ready.

At any time, bug fixes and features needed for particular web sites will go in
whichever x.y.z releases require them, as well as maintainance releases of any
later x.y releases.

Except for the 0.x series, API backwards compatibility within each major
release series will be given.

0.4
===

- turn ophelia into a namespace package, break the code into several eggs
- split the request object into request, response and a handler
- a more powerful traversal mechanism
- unified configuration for all the ways Ophelia can be used
- several backwards-incompatible clean-ups

0.4 series
==========

- views and traversers for using Ophelia inside Zope3 and Grok applications
- a syntax checker for input files
- a tool for including content from Restructured Text files
- separate error log when running inside Apache
- RSS reading done right

0.5
===

- use more Zope3 technology: i18n, content providers, events, local components
- more flexible input system, real integration of ReST, possibly image views
- deliver static content to be fully functional stand-alone
- directory listings
- internal caching of processed information, especially when using docutils
- data sources outside the file system, such as http or svn resources

1.0
===

The state in which the wishlist has been implemented completely for the first
time and code and documentation are of satisfactory quality.

The wishlist:

- zero-boilerplate creation of web sites inlcuding

  * hand-written XHTML pages, other input mark-up such as ReST
  * pages generated from JPEG, PNG and PDF files
  * overviews such as photo albums

- flexible, little-overhead navigation infrastructure

- straight-forward form submission infrastructure

- interfaces to:

  * WSGI servers
  * Apache/mod_python
  * Twisted Web
  * Zope 3 and Grok
  * CLI-based converter to static files

- cataloging, local search infrastructure (xapian)

- easy setup using zc.buildout


.. Local Variables:
.. mode: rst
.. End:
